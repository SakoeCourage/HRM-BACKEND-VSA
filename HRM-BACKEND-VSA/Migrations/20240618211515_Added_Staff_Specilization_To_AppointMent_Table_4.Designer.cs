// <auto-generated />
using System;
using HRM_BACKEND_VSA.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HRM_BACKEND_VSA.Migrations
{
    [DbContext(typeof(HRMStaffDBContext))]
    [Migration("20240618211515_Added_Staff_Specilization_To_AppointMent_Table_4")]
    partial class Added_Staff_Specilization_To_AppointMent_Table_4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HRM_BACKEND_VSA.Entities.Applicant.Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("applicationStatus")
                        .HasColumnType("text");

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("firsName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("hasSubmittedApplication")
                        .HasColumnType("boolean");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("HRM_BACKEND_VSA.Entities.Applicant.ApplicantBioData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ECOWASCardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GPSAddress")
                        .HasColumnType("text");

                    b.Property<string>("SNNITNumber")
                        .HasColumnType("text");

                    b.Property<Guid>("applicantId")
                        .HasColumnType("uuid");

                    b.Property<string>("birthCertificate")
                        .HasColumnType("text");

                    b.Property<string>("citizenship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("controllerStaffNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly?>("dateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("disability")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("highestQualification")
                        .HasColumnType("text");

                    b.Property<string>("highestQualificationCertificate")
                        .HasColumnType("text");

                    b.Property<string>("nssCertificate")
                        .HasColumnType("text");

                    b.Property<string>("nssNumber")
                        .HasColumnType("text");

                    b.Property<string>("otherNames")
                        .HasColumnType("text");

                    b.Property<string>("passportNumber")
                        .HasColumnType("text");

                    b.Property<string>("passportPicture")
                        .HasColumnType("text");

                    b.Property<string>("phoneOne")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phoneTwo")
                        .HasColumnType("text");

                    b.Property<string>("placeOfService")
                        .HasColumnType("text");

                    b.Property<string>("surName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("yearOfService")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("applicantId")
                        .IsUnique();

                    b.HasIndex("phoneOne")
                        .IsUnique();

                    b.ToTable("ApplicantBioData");
                });

            modelBuilder.Entity("HRM_BACKEND_VSA.Entities.Applicant.ApplicantEducationalBackground", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("applicantBioDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("certificate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("institutionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("yearCompleted")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("applicantBioDataId");

                    b.ToTable("ApplicantEducationalBackground");
                });

            modelBuilder.Entity("HRM_BACKEND_VSA.Entities.Applicant.ApplicantHasOTP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("applicantID")
                        .HasColumnType("uuid");

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("otp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("applicantID")
                        .IsUnique();

                    b.ToTable("ApplicantHasOTP");
                });

            modelBuilder.Entity("HRM_BACKEND_VSA.Entities.Applicant.ApplicantBioData", b =>
                {
                    b.HasOne("HRM_BACKEND_VSA.Entities.Applicant.Applicant", "Applicant")
                        .WithOne("bioData")
                        .HasForeignKey("HRM_BACKEND_VSA.Entities.Applicant.ApplicantBioData", "applicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("HRM_BACKEND_VSA.Entities.Applicant.ApplicantEducationalBackground", b =>
                {
                    b.HasOne("HRM_BACKEND_VSA.Entities.Applicant.ApplicantBioData", null)
                        .WithMany("educationalBackground")
                        .HasForeignKey("applicantBioDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRM_BACKEND_VSA.Entities.Applicant.ApplicantHasOTP", b =>
                {
                    b.HasOne("HRM_BACKEND_VSA.Entities.Applicant.Applicant", "applicant")
                        .WithOne("otp")
                        .HasForeignKey("HRM_BACKEND_VSA.Entities.Applicant.ApplicantHasOTP", "applicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("applicant");
                });

            modelBuilder.Entity("HRM_BACKEND_VSA.Entities.Applicant.Applicant", b =>
                {
                    b.Navigation("bioData")
                        .IsRequired();

                    b.Navigation("otp")
                        .IsRequired();
                });

            modelBuilder.Entity("HRM_BACKEND_VSA.Entities.Applicant.ApplicantBioData", b =>
                {
                    b.Navigation("educationalBackground");
                });
#pragma warning restore 612, 618
        }
    }
}
